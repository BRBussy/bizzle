steps:
  #
  # -------- decrypt config file ------
  #
  - name: gcr.io/cloud-builders/gcloud
    id: 'decrypt auth config file'
    args:
      - kms decrypt --ciphertext-file=configs/auth/config.toml.enc --plaintext-file=configs/auth/config.toml --location=global --keyring=bizzle --key=cryptographer
    waitFor: ['-']

  - name: gcr.io/cloud-builders/gcloud
    id: 'decrypt role config file'
    args:
      - kms decrypt --ciphertext-file=configs/role/config.toml.enc --plaintext-file=configs/role/config.toml --location=global --keyring=bizzle --key=cryptographer
    waitFor: ['-']

  - name: gcr.io/cloud-builders/gcloud
    id: 'decrypt user config file'
    args:
      - kms decrypt --ciphertext-file=configs/user/config.toml.enc --plaintext-file=configs/user/config.toml --location=global --keyring=bizzle --key=cryptographer
    waitFor: ['-']

  - name: gcr.io/cloud-builders/gcloud
    id: 'decrypt budget config file'
    args:
      - kms decrypt --ciphertext-file=configs/budget/config.toml.enc --plaintext-file=configs/budget/config.toml --location=global --keyring=bizzle --key=cryptographer
    waitFor: ['-']

  #
  # -------- build services ------
  #
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build auth image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -f build/package/auth/Dockerfile -t gcr.io/$PROJECT_ID/auth .
        docker push gcr.io/$PROJECT_ID/auth
    waitFor: ['decrypt auth config file']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'build role image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -f build/package/role/Dockerfile -t gcr.io/$PROJECT_ID/role .
        docker push gcr.io/$PROJECT_ID/role
    waitFor: ['decrypt role config file']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'build user image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -f build/package/user/Dockerfile -t gcr.io/$PROJECT_ID/user .
        docker push gcr.io/$PROJECT_ID/user
    waitFor: ['decrypt user config file']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'build budget image'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker build -f build/package/budget/Dockerfile -t gcr.io/$PROJECT_ID/budget .
        docker push gcr.io/$PROJECT_ID/budget
    waitFor: ['decrypt budget config file']

    #
    # deploy services
    #
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy auth'
    args: ['beta', 'run', 'deploy', 'auth', '--image', 'gcr.io/$PROJECT_ID/auth', '--region', 'us-central1','--platform', 'managed', '--quiet']
    waitFor: [
      'build auth image',
      'build role image',
      'build user image',
      'build budget image',
    ]

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy role'
    args: ['beta', 'run', 'deploy', 'role', '--image', 'gcr.io/$PROJECT_ID/role', '--region', 'us-central1','--platform', 'managed', '--quiet']
    waitFor: [
      'build auth image',
      'build role image',
      'build user image',
      'build budget image',
    ]

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy user'
    args: ['beta', 'run', 'deploy', 'user', '--image', 'gcr.io/$PROJECT_ID/user', '--region', 'us-central1','--platform', 'managed', '--quiet']
    waitFor: [
      'build auth image',
      'build role image',
      'build user image',
      'build budget image',
    ]

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy budget'
    args: ['beta', 'run', 'deploy', 'budget', '--image', 'gcr.io/$PROJECT_ID/budget', '--region', 'us-central1','--platform', 'managed', '--quiet']
    waitFor: [
      'build auth image',
      'build role image',
      'build user image',
      'build budget image',
    ]

timeout: 1200s